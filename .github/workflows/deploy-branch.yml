name: deploy-branch

on:
  workflow_dispatch:
    # inputs:
    #   DisableCache:
    #     description: 'disable cache'
    #     required: false
    #     default: 'false'
  push:
    branches: [ master ]

jobs:

  deploy_branch:
    runs-on: ubuntu-latest
    env:
      TF_CPP_MIN_LOG_LEVEL: 3

    steps:
      - name: checkout branch for build
        uses: actions/checkout@v2

      - name: install imagemagick
        run: |
          sudo apt install -y imagemagick

      - name: set up py3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: set up poetry
        uses: snok/install-poetry@v1.3.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: install dependencies (if cache does not exist)
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root

      - name: install library (if required)
        run: poetry install --no-interaction

      # # https://www.tensorflow.org/quantum/install
      # # todo: replace with a more sane solution
      # - name: install tensorflow_quantum
      #   run: |
      #     poetry run pip install --upgrade pip

      #     poetry run pip install -U tensorflow==2.7.0

      #     poetry run pip install -U cirq==0.11.1
      #     poetry run pip install -U tensorflow-quantum

      #     poetry run pip install -U cirq==0.11.1
      #     poetry run pip install -U tfq-nightly

      - name: build the book
        run: |
          export DWAVE_TOKEN="${{ secrets.DWAVE_TOKEN }}"
          poetry run jupyter-book build ./qmlcourseRU

      - name: build latex files
        run: |
          export DWAVE_TOKEN="${{ secrets.DWAVE_TOKEN }}"
          poetry run jupyter-book build ./qmlcourseRU --builder latex

      - name: update publish dir
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./qmlcourseRU/_build/html/
          publish_branch: deploy-any-branch
